// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.1
// source: Event.proto

package gcsForwarderDecode

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Millis int64 `protobuf:"varint,1,opt,name=millis,proto3" json:"millis,omitempty"`
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{0}
}

func (x *Timestamp) GetMillis() int64 {
	if x != nil {
		return x.Millis
	}
	return 0
}

type ConfigVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Default version.
	Default int32 `protobuf:"varint,1,opt,name=default,proto3" json:"default,omitempty"`
	// Custom version.
	Custom int32 `protobuf:"varint,2,opt,name=custom,proto3" json:"custom,omitempty"`
}

func (x *ConfigVersion) Reset() {
	*x = ConfigVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigVersion) ProtoMessage() {}

func (x *ConfigVersion) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigVersion.ProtoReflect.Descriptor instead.
func (*ConfigVersion) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigVersion) GetDefault() int32 {
	if x != nil {
		return x.Default
	}
	return 0
}

func (x *ConfigVersion) GetCustom() int32 {
	if x != nil {
		return x.Custom
	}
	return 0
}

type FieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SealedValue:
	//
	//	*FieldValue_StringFieldValue
	//	*FieldValue_BoolFieldValue
	//	*FieldValue_IntFieldValue
	//	*FieldValue_LongFieldValue
	//	*FieldValue_DoubleFieldValue
	//	*FieldValue_TimestampFieldValue
	//	*FieldValue_Ipv4FieldValue
	//	*FieldValue_Ipv6FieldValue
	//	*FieldValue_ArrayFieldValue
	//	*FieldValue_NumberFieldValue
	//	*FieldValue_DateTimeFieldValue
	//	*FieldValue_UrlFieldValue
	//	*FieldValue_EmailFieldValue
	//	*FieldValue_DomainFieldValue
	//	*FieldValue_HashFieldValue
	SealedValue isFieldValue_SealedValue `protobuf_oneof:"sealed_value"`
}

func (x *FieldValue) Reset() {
	*x = FieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldValue) ProtoMessage() {}

func (x *FieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldValue.ProtoReflect.Descriptor instead.
func (*FieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{2}
}

func (m *FieldValue) GetSealedValue() isFieldValue_SealedValue {
	if m != nil {
		return m.SealedValue
	}
	return nil
}

func (x *FieldValue) GetStringFieldValue() *StringFieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_StringFieldValue); ok {
		return x.StringFieldValue
	}
	return nil
}

func (x *FieldValue) GetBoolFieldValue() *BoolFieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_BoolFieldValue); ok {
		return x.BoolFieldValue
	}
	return nil
}

func (x *FieldValue) GetIntFieldValue() *IntFieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_IntFieldValue); ok {
		return x.IntFieldValue
	}
	return nil
}

func (x *FieldValue) GetLongFieldValue() *LongFieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_LongFieldValue); ok {
		return x.LongFieldValue
	}
	return nil
}

func (x *FieldValue) GetDoubleFieldValue() *DoubleFieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_DoubleFieldValue); ok {
		return x.DoubleFieldValue
	}
	return nil
}

func (x *FieldValue) GetTimestampFieldValue() *TimestampFieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_TimestampFieldValue); ok {
		return x.TimestampFieldValue
	}
	return nil
}

func (x *FieldValue) GetIpv4FieldValue() *Ipv4FieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_Ipv4FieldValue); ok {
		return x.Ipv4FieldValue
	}
	return nil
}

func (x *FieldValue) GetIpv6FieldValue() *Ipv6FieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_Ipv6FieldValue); ok {
		return x.Ipv6FieldValue
	}
	return nil
}

func (x *FieldValue) GetArrayFieldValue() *ArrayFieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_ArrayFieldValue); ok {
		return x.ArrayFieldValue
	}
	return nil
}

func (x *FieldValue) GetNumberFieldValue() *NumberFieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_NumberFieldValue); ok {
		return x.NumberFieldValue
	}
	return nil
}

func (x *FieldValue) GetDateTimeFieldValue() *DateTimeFieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_DateTimeFieldValue); ok {
		return x.DateTimeFieldValue
	}
	return nil
}

func (x *FieldValue) GetUrlFieldValue() *UrlFieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_UrlFieldValue); ok {
		return x.UrlFieldValue
	}
	return nil
}

func (x *FieldValue) GetEmailFieldValue() *EmailFieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_EmailFieldValue); ok {
		return x.EmailFieldValue
	}
	return nil
}

func (x *FieldValue) GetDomainFieldValue() *DomainFieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_DomainFieldValue); ok {
		return x.DomainFieldValue
	}
	return nil
}

func (x *FieldValue) GetHashFieldValue() *HashFieldValue {
	if x, ok := x.GetSealedValue().(*FieldValue_HashFieldValue); ok {
		return x.HashFieldValue
	}
	return nil
}

type isFieldValue_SealedValue interface {
	isFieldValue_SealedValue()
}

type FieldValue_StringFieldValue struct {
	StringFieldValue *StringFieldValue `protobuf:"bytes,1,opt,name=stringFieldValue,proto3,oneof"`
}

type FieldValue_BoolFieldValue struct {
	BoolFieldValue *BoolFieldValue `protobuf:"bytes,2,opt,name=boolFieldValue,proto3,oneof"`
}

type FieldValue_IntFieldValue struct {
	IntFieldValue *IntFieldValue `protobuf:"bytes,3,opt,name=intFieldValue,proto3,oneof"`
}

type FieldValue_LongFieldValue struct {
	LongFieldValue *LongFieldValue `protobuf:"bytes,4,opt,name=longFieldValue,proto3,oneof"`
}

type FieldValue_DoubleFieldValue struct {
	DoubleFieldValue *DoubleFieldValue `protobuf:"bytes,5,opt,name=doubleFieldValue,proto3,oneof"`
}

type FieldValue_TimestampFieldValue struct {
	TimestampFieldValue *TimestampFieldValue `protobuf:"bytes,6,opt,name=timestampFieldValue,proto3,oneof"`
}

type FieldValue_Ipv4FieldValue struct {
	Ipv4FieldValue *Ipv4FieldValue `protobuf:"bytes,7,opt,name=ipv4FieldValue,proto3,oneof"`
}

type FieldValue_Ipv6FieldValue struct {
	Ipv6FieldValue *Ipv6FieldValue `protobuf:"bytes,8,opt,name=ipv6FieldValue,proto3,oneof"`
}

type FieldValue_ArrayFieldValue struct {
	ArrayFieldValue *ArrayFieldValue `protobuf:"bytes,9,opt,name=arrayFieldValue,proto3,oneof"`
}

type FieldValue_NumberFieldValue struct {
	NumberFieldValue *NumberFieldValue `protobuf:"bytes,10,opt,name=numberFieldValue,proto3,oneof"`
}

type FieldValue_DateTimeFieldValue struct {
	DateTimeFieldValue *DateTimeFieldValue `protobuf:"bytes,11,opt,name=dateTimeFieldValue,proto3,oneof"`
}

type FieldValue_UrlFieldValue struct {
	UrlFieldValue *UrlFieldValue `protobuf:"bytes,12,opt,name=urlFieldValue,proto3,oneof"`
}

type FieldValue_EmailFieldValue struct {
	EmailFieldValue *EmailFieldValue `protobuf:"bytes,13,opt,name=emailFieldValue,proto3,oneof"`
}

type FieldValue_DomainFieldValue struct {
	DomainFieldValue *DomainFieldValue `protobuf:"bytes,14,opt,name=domainFieldValue,proto3,oneof"`
}

type FieldValue_HashFieldValue struct {
	HashFieldValue *HashFieldValue `protobuf:"bytes,15,opt,name=hashFieldValue,proto3,oneof"`
}

func (*FieldValue_StringFieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_BoolFieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_IntFieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_LongFieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_DoubleFieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_TimestampFieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_Ipv4FieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_Ipv6FieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_ArrayFieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_NumberFieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_DateTimeFieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_UrlFieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_EmailFieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_DomainFieldValue) isFieldValue_SealedValue() {}

func (*FieldValue_HashFieldValue) isFieldValue_SealedValue() {}

type StringFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StringFieldValue) Reset() {
	*x = StringFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringFieldValue) ProtoMessage() {}

func (x *StringFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringFieldValue.ProtoReflect.Descriptor instead.
func (*StringFieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{3}
}

func (x *StringFieldValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type BoolFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BoolFieldValue) Reset() {
	*x = BoolFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolFieldValue) ProtoMessage() {}

func (x *BoolFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolFieldValue.ProtoReflect.Descriptor instead.
func (*BoolFieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{4}
}

func (x *BoolFieldValue) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type IntFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IntFieldValue) Reset() {
	*x = IntFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntFieldValue) ProtoMessage() {}

func (x *IntFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntFieldValue.ProtoReflect.Descriptor instead.
func (*IntFieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{5}
}

func (x *IntFieldValue) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type LongFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LongFieldValue) Reset() {
	*x = LongFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LongFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LongFieldValue) ProtoMessage() {}

func (x *LongFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LongFieldValue.ProtoReflect.Descriptor instead.
func (*LongFieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{6}
}

func (x *LongFieldValue) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DoubleFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DoubleFieldValue) Reset() {
	*x = DoubleFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleFieldValue) ProtoMessage() {}

func (x *DoubleFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleFieldValue.ProtoReflect.Descriptor instead.
func (*DoubleFieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{7}
}

func (x *DoubleFieldValue) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type TimestampFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Timestamp `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TimestampFieldValue) Reset() {
	*x = TimestampFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimestampFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimestampFieldValue) ProtoMessage() {}

func (x *TimestampFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimestampFieldValue.ProtoReflect.Descriptor instead.
func (*TimestampFieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{8}
}

func (x *TimestampFieldValue) GetValue() *Timestamp {
	if x != nil {
		return x.Value
	}
	return nil
}

type Ipv4FieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Ipv4FieldValue) Reset() {
	*x = Ipv4FieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ipv4FieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ipv4FieldValue) ProtoMessage() {}

func (x *Ipv4FieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ipv4FieldValue.ProtoReflect.Descriptor instead.
func (*Ipv4FieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{9}
}

func (x *Ipv4FieldValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Ipv6FieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Ipv6FieldValue) Reset() {
	*x = Ipv6FieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ipv6FieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ipv6FieldValue) ProtoMessage() {}

func (x *Ipv6FieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ipv6FieldValue.ProtoReflect.Descriptor instead.
func (*Ipv6FieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{10}
}

func (x *Ipv6FieldValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ArrayFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*FieldValue `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *ArrayFieldValue) Reset() {
	*x = ArrayFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayFieldValue) ProtoMessage() {}

func (x *ArrayFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayFieldValue.ProtoReflect.Descriptor instead.
func (*ArrayFieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{11}
}

func (x *ArrayFieldValue) GetValue() []*FieldValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type NumberFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NumberFieldValue) Reset() {
	*x = NumberFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberFieldValue) ProtoMessage() {}

func (x *NumberFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberFieldValue.ProtoReflect.Descriptor instead.
func (*NumberFieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{12}
}

func (x *NumberFieldValue) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DateTimeFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DateTimeFieldValue) Reset() {
	*x = DateTimeFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateTimeFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateTimeFieldValue) ProtoMessage() {}

func (x *DateTimeFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateTimeFieldValue.ProtoReflect.Descriptor instead.
func (*DateTimeFieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{13}
}

func (x *DateTimeFieldValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UrlFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UrlFieldValue) Reset() {
	*x = UrlFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlFieldValue) ProtoMessage() {}

func (x *UrlFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlFieldValue.ProtoReflect.Descriptor instead.
func (*UrlFieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{14}
}

func (x *UrlFieldValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type EmailFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EmailFieldValue) Reset() {
	*x = EmailFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailFieldValue) ProtoMessage() {}

func (x *EmailFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailFieldValue.ProtoReflect.Descriptor instead.
func (*EmailFieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{15}
}

func (x *EmailFieldValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DomainFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DomainFieldValue) Reset() {
	*x = DomainFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainFieldValue) ProtoMessage() {}

func (x *DomainFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainFieldValue.ProtoReflect.Descriptor instead.
func (*DomainFieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{16}
}

func (x *DomainFieldValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type HashFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *HashFieldValue) Reset() {
	*x = HashFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashFieldValue) ProtoMessage() {}

func (x *HashFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashFieldValue.ProtoReflect.Descriptor instead.
func (*HashFieldValue) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{17}
}

func (x *HashFieldValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// A thing that happened on some device and needs to be processed by pipeline.
// Typically constructed from a log line.
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// option (scalapb.message).extends = "com.exabeam.pipeline.models.EventExt";
	// Unique id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Body of first log message. Additional log messages in "AdditionalLogs" field inside "fields" field.
	Log string `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
	// Approximate time of event. Used to be "time" field.
	ApproxLogTime *Timestamp `protobuf:"bytes,3,opt,name=approxLogTime,proto3" json:"approxLogTime,omitempty"`
	// Is semantic parsing of log was successful.
	Parsed bool `protobuf:"varint,4,opt,name=parsed,proto3" json:"parsed,omitempty"`
	// Version of field's types configuration.
	FieldTypesVersion *ConfigVersion `protobuf:"bytes,5,opt,name=fieldTypesVersion,proto3" json:"fieldTypesVersion,omitempty"`
	// Fields extracted from a log message during processing by pipeline.
	Fields                map[string]*FieldValue `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RawLogIds             []string               `protobuf:"bytes,7,rep,name=rawLogIds,proto3" json:"rawLogIds,omitempty"`
	CimCompliant          bool                   `protobuf:"varint,8,opt,name=cimCompliant,proto3" json:"cimCompliant,omitempty"`
	CoreFieldsMissed      bool                   `protobuf:"varint,9,opt,name=coreFieldsMissed,proto3" json:"coreFieldsMissed,omitempty"`
	DetectionFieldsMissed bool                   `protobuf:"varint,10,opt,name=detectionFieldsMissed,proto3" json:"detectionFieldsMissed,omitempty"`
	// Custom fields extracted from a log message during processing by pipeline
	CustomFields map[string]*FieldValue `protobuf:"bytes,11,rep,name=customFields,proto3" json:"customFields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Event_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_Event_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_Event_proto_rawDescGZIP(), []int{18}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *Event) GetApproxLogTime() *Timestamp {
	if x != nil {
		return x.ApproxLogTime
	}
	return nil
}

func (x *Event) GetParsed() bool {
	if x != nil {
		return x.Parsed
	}
	return false
}

func (x *Event) GetFieldTypesVersion() *ConfigVersion {
	if x != nil {
		return x.FieldTypesVersion
	}
	return nil
}

func (x *Event) GetFields() map[string]*FieldValue {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Event) GetRawLogIds() []string {
	if x != nil {
		return x.RawLogIds
	}
	return nil
}

func (x *Event) GetCimCompliant() bool {
	if x != nil {
		return x.CimCompliant
	}
	return false
}

func (x *Event) GetCoreFieldsMissed() bool {
	if x != nil {
		return x.CoreFieldsMissed
	}
	return false
}

func (x *Event) GetDetectionFieldsMissed() bool {
	if x != nil {
		return x.DetectionFieldsMissed
	}
	return false
}

func (x *Event) GetCustomFields() map[string]*FieldValue {
	if x != nil {
		return x.CustomFields
	}
	return nil
}

var File_Event_proto protoreflect.FileDescriptor

var file_Event_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x67,
	0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x23, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x22, 0x41, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0xe1, 0x09, 0x0a, 0x0a, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4c, 0x0a, 0x0e,
	0x62, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x62, 0x6f, 0x6f, 0x6c,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x69, 0x6e,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x6c, 0x6f, 0x6e, 0x67, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x4c, 0x6f, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x6f, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x10, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x5b, 0x0a, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52,
	0x13, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x69, 0x70, 0x76, 0x34, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67,
	0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x2e, 0x49, 0x70, 0x76, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x0e, 0x69, 0x70, 0x76, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x69, 0x70, 0x76, 0x36, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x63, 0x73,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x49, 0x70, 0x76, 0x36, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00,
	0x52, 0x0e, 0x69, 0x70, 0x76, 0x36, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x4f, 0x0a, 0x0f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x63, 0x73, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00,
	0x52, 0x0f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x52, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x63,
	0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x48, 0x00, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x58, 0x0a, 0x12, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x12, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x49, 0x0a, 0x0d, 0x75, 0x72, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x55, 0x72, 0x6c, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x75, 0x72, 0x6c,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x10, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x4c, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x48, 0x61, 0x73,
	0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x68,
	0x61, 0x73, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a,
	0x10, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6c, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x25, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x0e, 0x4c, 0x6f, 0x6e, 0x67, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28,
	0x0a, 0x10, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4a, 0x0a, 0x13, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x0e, 0x49, 0x70, 0x76, 0x34, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x0e,
	0x49, 0x70, 0x76, 0x36, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x47, 0x0a, 0x0f, 0x41, 0x72, 0x72, 0x61, 0x79, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a,
	0x10, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x55, 0x72, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x27, 0x0a, 0x0f, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x10, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a,
	0x0e, 0x48, 0x61, 0x73, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc7, 0x05, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f,
	0x67, 0x12, 0x43, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x4c, 0x6f, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x4c,
	0x6f, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x12, 0x4f,
	0x0a, 0x11, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x63, 0x73, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x3d, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x61, 0x77, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x61, 0x77, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x69, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x63, 0x69, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4d, 0x69,
	0x73, 0x73, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x6f, 0x72, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x15,
	0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4d,
	0x69, 0x73, 0x73, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x64, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4d, 0x69, 0x73, 0x73,
	0x65, 0x64, 0x12, 0x4f, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x1a, 0x59, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5f,
	0x0a, 0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42,
	0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x6f,
	0x65, 0x2d, 0x74, 0x68, 0x6f, 0x6d, 0x70, 0x73, 0x6f, 0x6e, 0x2d, 0x65, 0x78, 0x61, 0x2f, 0x67,
	0x63, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Event_proto_rawDescOnce sync.Once
	file_Event_proto_rawDescData = file_Event_proto_rawDesc
)

func file_Event_proto_rawDescGZIP() []byte {
	file_Event_proto_rawDescOnce.Do(func() {
		file_Event_proto_rawDescData = protoimpl.X.CompressGZIP(file_Event_proto_rawDescData)
	})
	return file_Event_proto_rawDescData
}

var file_Event_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_Event_proto_goTypes = []interface{}{
	(*Timestamp)(nil),           // 0: gcsForwarderDecode.Timestamp
	(*ConfigVersion)(nil),       // 1: gcsForwarderDecode.ConfigVersion
	(*FieldValue)(nil),          // 2: gcsForwarderDecode.FieldValue
	(*StringFieldValue)(nil),    // 3: gcsForwarderDecode.StringFieldValue
	(*BoolFieldValue)(nil),      // 4: gcsForwarderDecode.BoolFieldValue
	(*IntFieldValue)(nil),       // 5: gcsForwarderDecode.IntFieldValue
	(*LongFieldValue)(nil),      // 6: gcsForwarderDecode.LongFieldValue
	(*DoubleFieldValue)(nil),    // 7: gcsForwarderDecode.DoubleFieldValue
	(*TimestampFieldValue)(nil), // 8: gcsForwarderDecode.TimestampFieldValue
	(*Ipv4FieldValue)(nil),      // 9: gcsForwarderDecode.Ipv4FieldValue
	(*Ipv6FieldValue)(nil),      // 10: gcsForwarderDecode.Ipv6FieldValue
	(*ArrayFieldValue)(nil),     // 11: gcsForwarderDecode.ArrayFieldValue
	(*NumberFieldValue)(nil),    // 12: gcsForwarderDecode.NumberFieldValue
	(*DateTimeFieldValue)(nil),  // 13: gcsForwarderDecode.DateTimeFieldValue
	(*UrlFieldValue)(nil),       // 14: gcsForwarderDecode.UrlFieldValue
	(*EmailFieldValue)(nil),     // 15: gcsForwarderDecode.EmailFieldValue
	(*DomainFieldValue)(nil),    // 16: gcsForwarderDecode.DomainFieldValue
	(*HashFieldValue)(nil),      // 17: gcsForwarderDecode.HashFieldValue
	(*Event)(nil),               // 18: gcsForwarderDecode.Event
	nil,                         // 19: gcsForwarderDecode.Event.FieldsEntry
	nil,                         // 20: gcsForwarderDecode.Event.CustomFieldsEntry
}
var file_Event_proto_depIdxs = []int32{
	3,  // 0: gcsForwarderDecode.FieldValue.stringFieldValue:type_name -> gcsForwarderDecode.StringFieldValue
	4,  // 1: gcsForwarderDecode.FieldValue.boolFieldValue:type_name -> gcsForwarderDecode.BoolFieldValue
	5,  // 2: gcsForwarderDecode.FieldValue.intFieldValue:type_name -> gcsForwarderDecode.IntFieldValue
	6,  // 3: gcsForwarderDecode.FieldValue.longFieldValue:type_name -> gcsForwarderDecode.LongFieldValue
	7,  // 4: gcsForwarderDecode.FieldValue.doubleFieldValue:type_name -> gcsForwarderDecode.DoubleFieldValue
	8,  // 5: gcsForwarderDecode.FieldValue.timestampFieldValue:type_name -> gcsForwarderDecode.TimestampFieldValue
	9,  // 6: gcsForwarderDecode.FieldValue.ipv4FieldValue:type_name -> gcsForwarderDecode.Ipv4FieldValue
	10, // 7: gcsForwarderDecode.FieldValue.ipv6FieldValue:type_name -> gcsForwarderDecode.Ipv6FieldValue
	11, // 8: gcsForwarderDecode.FieldValue.arrayFieldValue:type_name -> gcsForwarderDecode.ArrayFieldValue
	12, // 9: gcsForwarderDecode.FieldValue.numberFieldValue:type_name -> gcsForwarderDecode.NumberFieldValue
	13, // 10: gcsForwarderDecode.FieldValue.dateTimeFieldValue:type_name -> gcsForwarderDecode.DateTimeFieldValue
	14, // 11: gcsForwarderDecode.FieldValue.urlFieldValue:type_name -> gcsForwarderDecode.UrlFieldValue
	15, // 12: gcsForwarderDecode.FieldValue.emailFieldValue:type_name -> gcsForwarderDecode.EmailFieldValue
	16, // 13: gcsForwarderDecode.FieldValue.domainFieldValue:type_name -> gcsForwarderDecode.DomainFieldValue
	17, // 14: gcsForwarderDecode.FieldValue.hashFieldValue:type_name -> gcsForwarderDecode.HashFieldValue
	0,  // 15: gcsForwarderDecode.TimestampFieldValue.value:type_name -> gcsForwarderDecode.Timestamp
	2,  // 16: gcsForwarderDecode.ArrayFieldValue.value:type_name -> gcsForwarderDecode.FieldValue
	0,  // 17: gcsForwarderDecode.Event.approxLogTime:type_name -> gcsForwarderDecode.Timestamp
	1,  // 18: gcsForwarderDecode.Event.fieldTypesVersion:type_name -> gcsForwarderDecode.ConfigVersion
	19, // 19: gcsForwarderDecode.Event.fields:type_name -> gcsForwarderDecode.Event.FieldsEntry
	20, // 20: gcsForwarderDecode.Event.customFields:type_name -> gcsForwarderDecode.Event.CustomFieldsEntry
	2,  // 21: gcsForwarderDecode.Event.FieldsEntry.value:type_name -> gcsForwarderDecode.FieldValue
	2,  // 22: gcsForwarderDecode.Event.CustomFieldsEntry.value:type_name -> gcsForwarderDecode.FieldValue
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_Event_proto_init() }
func file_Event_proto_init() {
	if File_Event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LongFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoubleFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimestampFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ipv4FieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ipv6FieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateTimeFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Event_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Event_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*FieldValue_StringFieldValue)(nil),
		(*FieldValue_BoolFieldValue)(nil),
		(*FieldValue_IntFieldValue)(nil),
		(*FieldValue_LongFieldValue)(nil),
		(*FieldValue_DoubleFieldValue)(nil),
		(*FieldValue_TimestampFieldValue)(nil),
		(*FieldValue_Ipv4FieldValue)(nil),
		(*FieldValue_Ipv6FieldValue)(nil),
		(*FieldValue_ArrayFieldValue)(nil),
		(*FieldValue_NumberFieldValue)(nil),
		(*FieldValue_DateTimeFieldValue)(nil),
		(*FieldValue_UrlFieldValue)(nil),
		(*FieldValue_EmailFieldValue)(nil),
		(*FieldValue_DomainFieldValue)(nil),
		(*FieldValue_HashFieldValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Event_proto_goTypes,
		DependencyIndexes: file_Event_proto_depIdxs,
		MessageInfos:      file_Event_proto_msgTypes,
	}.Build()
	File_Event_proto = out.File
	file_Event_proto_rawDesc = nil
	file_Event_proto_goTypes = nil
	file_Event_proto_depIdxs = nil
}
